{"version":3,"sources":["components/presentation/Body.js","actions/index.js","components/connected/Body.js","components/presentation/Header.js","components/connected/Header.js","index.js","reducers/index.js"],"names":["body","props","list","values","map","item","index","react_default","a","createElement","key","onClick","addAction","value","type","removeAction","connectedComponent","connect","state","dispatch","Body","Header","setNewValue","e","preventDefault","_this","onSubmit","_input","self","this","ref","Component","store","createStore","action","undefined","concat","Object","toConsumableArray","slice","length","render","es","connected_Header","connected_Body","document","getElementById"],"mappings":"kNAEA,IAgBeA,EAhBF,SAACC,GACZ,IAAMC,EAAOD,EAAME,OAAOC,IAAI,SAACC,EAAMC,GACnC,OACEC,EAAAC,EAAAC,cAAA,MAAIC,IAAKJ,EAAOK,QAAS,kBAAMV,EAAMU,QAAQL,KAC1CD,KAKP,OACEE,EAAAC,EAAAC,cAAA,UACGP,ICXDU,EAAY,SAACC,GAClB,MAAO,CAAEC,KAAM,MAAOD,MAAOA,IAExBE,EAAe,SAACT,GACrB,MAAO,CAAEQ,KAAM,SAAUR,MAAOA,ICejC,IAKeU,EALUC,YAjBzB,SAAyBC,GACvB,MAAO,CACLf,OAAQe,EAAMf,OACdG,MAAOY,EAAMZ,QAKjB,SAA4Ba,GAC1B,MAAO,CACLR,QAAS,SAASL,GAChB,OAAOa,EAASJ,EAAaT,OAMVW,CAGvBG,2CCEaC,6MAvBbC,YAAc,SAACC,GACXA,EAAEC,iBACFC,EAAKxB,MAAMyB,SAASD,EAAKE,OAAOd,OAChCY,EAAKE,OAAOd,MAAQ,4EAItB,IAAIe,EAAOC,KACX,OACEtB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,QAAMiB,SAAUG,KAAKP,aACnBf,EAAAC,EAAAC,cAAA,SAAOqB,IACL,SAACP,GACCK,EAAKD,OAASJ,GAEhBT,KAAK,SACPP,EAAAC,EAAAC,cAAA,UAAQK,KAAK,UAAb,gBAjBWiB,aCkBrB,IAKef,EALUC,YAhBzB,SAAyBC,GACvB,MAAO,CACLf,OAAQe,EAAMf,SAKlB,SAA4BgB,GAC1B,MAAO,CACLO,SAAU,SAASb,GACjB,OAAOM,EAASP,EAAUC,OAMPI,CAGvBI,GCLEW,EAAQC,YClBG,SAAiBf,EAAOgB,GACrC,QAAcC,IAAVjB,EACF,MAAO,CAAEf,OAAQ,IAEnB,IAAMA,EAASe,EAAMf,OACrB,OAAQ+B,EAAOpB,MACb,IAAK,MACN,MAAO,CAAEX,OAAM,GAAAiC,OAAAC,OAAAC,EAAA,EAAAD,CAAMlC,GAAN,CAAc+B,EAAOrB,SACnC,IAAK,SACJ,IAAMP,EAAQ4B,EAAO5B,MAErB,MAAO,CAAEH,OADOA,EAAOoC,MAAM,EAAGjC,GAAO8B,OAAOjC,EAAOoC,MAAMjC,EAAQ,EAAGH,EAAOqC,UAE9E,QACE,OAAOtB,KDMbuB,iBACElC,EAAAC,EAAAC,cAACiC,EAAA,EAAD,CAAUV,MAAOA,GACfzB,EAAAC,EAAAC,cAZQ,WACV,OACEF,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkC,EAAD,MACApC,EAAAC,EAAAC,cAACmC,EAAD,QAQF,OAEDC,SAASC,eAAe","file":"static/js/main.536bb0fb.chunk.js","sourcesContent":["import React from 'react';\n\nconst body = (props) => {\n  const list = props.values.map((item, index) => {\n    return (\n      <li key={index} onClick={() => props.onClick(index)}>\n        {item}\n      </li>\n    );\n  });\n\n  return (\n    <ul>\n      {list}\n    </ul>\n  );\n}\n\nexport default body;","// Action\n\nconst addAction = (value) => { \n\treturn { type: \"add\", value: value }\n};\nconst removeAction = (index) => {\n\treturn { type: \"remove\", index: index }\n};\n\nexport {\n  addAction,\n  removeAction\n}","import {connect} from \"react-redux\";\nimport Body from \"../presentation/Body\";\nimport { removeAction} from \"../../actions\";\n\nfunction mapStateToProps(state) {\n  return {\n    values: state.values,\n    index: state.index\n  };\n}\n \n// Map Redux actions to component props\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onClick: function(index) {\n      return dispatch(removeAction(index));\n    }\n  };\n}\n \n// The HOC\nvar connectedComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Body);\n \nexport default connectedComponent;","import React, { Component } from 'react';\n\nclass Header extends Component {\n  setNewValue = (e) => { \n      e.preventDefault();\n      this.props.onSubmit(this._input.value);\n      this._input.value = \"\";\n  }\n  \n  render() {\n    let self = this;\n    return (\n      <div>\n        <form onSubmit={this.setNewValue}>\n          <input ref={  \n            (e) => {\n              self._input = e;\n            }\n          } type=\"text\" />\n          <button type=\"submit\">Add</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default Header;","import {connect} from \"react-redux\";\nimport Header from \"../presentation/Header\";\nimport {addAction} from \"../../actions\";\n\nfunction mapStateToProps(state) {\n  return {\n    values: state.values\n  };\n}\n \n// Map Redux actions to component props\nfunction mapDispatchToProps(dispatch) {\n  return {\n    onSubmit: function(value) {\n      return dispatch(addAction(value));\n    }\n  };\n}\n \n// The HOC\nvar connectedComponent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Header);\n \nexport default connectedComponent;","import React from 'react';\nimport { render } from 'react-dom';\nimport './style.css';\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from './reducers';\nimport Body from './components/connected/Body';\nimport Header from './components/connected/Header';\n\nconst App = () => {\n  return (\n    <div>\n      <Header />\n      <Body/>\n    </div>\n  );\n}\n\nvar store = createStore(reducer);\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n   document.getElementById('root')\n);","export default function reducer(state, action) {\n  if (state === undefined) {\n    return { values: [] };\n  }\n  const values = state.values;\n  switch (action.type) {\n    case \"add\":\n\t \treturn { values: [...values, action.value]};\n    case \"remove\":\n    \tconst index = action.index\n\t    const newVals = values.slice(0, index).concat(values.slice(index + 1, values.length));\n    \treturn { values: newVals };    \n    default:\n      return state;\n  }\n}"],"sourceRoot":""}